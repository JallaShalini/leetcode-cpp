class Solution {
public:
    bool hasCycle(ListNode *head) {
        if (head == nullptr || head->next == nullptr)
            return false;

        ListNode *slow = head;
        ListNode *fast = head;

        while (fast != nullptr && fast->next != nullptr) {
            slow = slow->next;           // move one step
            fast = fast->next->next;     // move two steps

            if (slow == fast)
                return true;             // cycle detected
        }

        return false; // no cycle
    }
};
